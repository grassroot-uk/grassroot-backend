# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
  user: User!
}

type Campaign {
  """City to the campaign"""
  city: String!

  """Completion unix timeStamp to the Campaign"""
  completionDate: String!

  """Country to the campaign"""
  country: String!

  """Owning Dao for this campaign"""
  dao: Dao!

  """DAO Id to which this campaign is under."""
  daoId: String!

  """Total Goal Amount to the Campaign"""
  goalAmount: String!

  """Id of the Campaign"""
  id: String!

  """Images to the Campaign"""
  images: [String!]!

  """Country to the campaign"""
  metadata: JSON!

  """Minimum Contribution amount to the Campaign"""
  minAmount: String!

  """State to the campaign"""
  state: String!

  """Subtitle of the Campaign"""
  subtitle: String!

  """Title of the Campaign"""
  title: String!

  """Token denomination name of the token."""
  tokenCurrency: String!

  """Token Address of the token."""
  tokenCurrencyAddress: String!

  """Transaction Hash on which Campaign is created."""
  transactionHash: String!

  """Videos to the Campaign"""
  videos: [String!]!
}

type Contract {
  """Address of the contract"""
  address: String!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!

  """Description of the contract"""
  description: String!
  id: ID!

  """Metadata of Contract"""
  metadata: JSON!

  """Name of the contract"""
  name: String!

  """Network Name"""
  networkName: String!

  """Transaction hash of Contract Deployment"""
  transactionHash: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

input CreateCampaignInput {
  """Blockchain CampaignID of the Campaign"""
  campaignId: String!

  """City to the campaign"""
  city: String!

  """Completion unix timeStamp to the Campaign"""
  completionDate: String!

  """Country to the campaign"""
  country: String!

  """Total Goal Amount to the Campaign"""
  goalAmount: String!

  """Images to the Campaign"""
  images: [String!]!

  """Country to the campaign"""
  metadata: JSON

  """Minimum Contribution amount to the Campaign"""
  minAmount: String!

  """State to the campaign"""
  state: String!

  """Subtitle of the Campaign"""
  subtitle: String!

  """Title of the Campaign"""
  title: String!

  """Token denomination name of the token."""
  tokenCurrency: String!

  """Token Address of the token."""
  tokenCurrencyAddress: String!

  """Transaction Hash on which Campaign is created."""
  transactionHash: String!

  """Videos to the Campaign"""
  videos: [String!]!
}

input CreateContractInput {
  """Address of the contract"""
  address: String!

  """Network Slug"""
  chainId: Int!

  """Description of the contract"""
  description: String!

  """Metadata of Contract"""
  metadata: JSON!

  """Name of the contract"""
  name: String!

  """Network Name"""
  networkName: String!

  """Network Slug"""
  networkSlug: String!

  """Network Slug"""
  rpcUrl: String!

  """Network Slug"""
  rpcUrlws: String!

  """Transaction hash of Contract Deployment"""
  transactionHash: String!
}

input CreateDaoInput {
  """Url to the Background Picture for the DAO."""
  backgroundPicture: String!

  """Description of the DAO."""
  description: String!

  """Metadata JSON to the DAO"""
  metadata: JSON!

  """Name of the DAO."""
  name: String!

  """Url to the Profile Picture for the DAO."""
  profilePicture: String!
}

type Dao {
  """DAO admin address."""
  adminAddress: String!

  """DAO admin Id."""
  adminId: String!

  """Url to the Background Picture for the DAO."""
  backgroundPicture: String!

  """Description of the DAO."""
  description: String!

  """Id for the DAO"""
  id: String!

  """Any Metadata for DAO"""
  metadata: JSON!

  """Name of the DAO."""
  name: String!

  """Url to the Profile Picture for the DAO."""
  profilePicture: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type File {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!
  imageUrl: String!
  metadataUrl: String!
  name: String!
  ownerId: String!
  resolver: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  uploadedIPFS: Boolean!
}

input GenerateNonce {
  address: String!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

"""
A field whose value is a JSON Web Token (JWT): https://jwt.io/introduction.
"""
scalar JWT

type Mutation {
  createCampaign(createCampaignInput: CreateCampaignInput!, daoId: String!): Campaign!
  createContract(createContractInput: CreateContractInput!): Contract!
  createDao(createDaoInput: CreateDaoInput!): Dao!
  generateNonce(data: GenerateNonce!): Nonce!
  refreshToken(token: JWT!): Token!
  signupOrLogin(data: SignupInput!): Auth!
  updateCampaign(updateCampaignInput: UpdateCampaignInput!): Campaign!
  updateContract(updateContractInput: UpdateContractInput!): Contract!
  updateDao(updateDaoInput: UpdateDaoInput!): Dao!
  updateUser(data: UpdateUserInput!): User!
}

type Nonce {
  """Address for Nonce"""
  address: String!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!

  """Nonce"""
  nonce: String!

  """Success of Nonce Generation"""
  success: Boolean!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type Query {
  campaign: [Campaign!]!
  campaignById(id: String!): Campaign!
  contract(id: Int!): Contract!
  contracts: [Contract!]!
  daoById(id: String!): Dao
  daos: [Dao!]!
  me: User!
  myDaos: [Dao!]!
}

"""User role"""
enum Role {
  ADMIN
  USER
}

input SignupInput {
  address: String!
  email: String
  firstname: String
  lastname: String
  signature: String!
}

type Token {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
}

input UpdateCampaignInput {
  """Blockchain CampaignID of the Campaign"""
  campaignId: String

  """City to the campaign"""
  city: String

  """Completion unix timeStamp to the Campaign"""
  completionDate: String

  """Country to the campaign"""
  country: String

  """Total Goal Amount to the Campaign"""
  goalAmount: String
  id: String!

  """Images to the Campaign"""
  images: [String!]

  """Country to the campaign"""
  metadata: JSON

  """Minimum Contribution amount to the Campaign"""
  minAmount: String

  """State to the campaign"""
  state: String

  """Subtitle of the Campaign"""
  subtitle: String

  """Title of the Campaign"""
  title: String

  """Token denomination name of the token."""
  tokenCurrency: String

  """Token Address of the token."""
  tokenCurrencyAddress: String

  """Transaction Hash on which Campaign is created."""
  transactionHash: String

  """Videos to the Campaign"""
  videos: [String!]
}

input UpdateContractInput {
  """Address of the contract"""
  address: String

  """Network Slug"""
  chainId: Int

  """Description of the contract"""
  description: String
  id: Int!

  """Metadata of Contract"""
  metadata: JSON

  """Name of the contract"""
  name: String

  """Network Name"""
  networkName: String

  """Network Slug"""
  networkSlug: String

  """Network Slug"""
  rpcUrl: String

  """Network Slug"""
  rpcUrlws: String

  """Transaction hash of Contract Deployment"""
  transactionHash: String
}

input UpdateDaoInput {
  """Url to the Background Picture for the DAO."""
  backgroundPicture: String

  """Description of the DAO."""
  description: String

  """Id of the string"""
  id: String!

  """Metadata JSON to the DAO"""
  metadata: JSON

  """Name of the DAO."""
  name: String

  """Url to the Profile Picture for the DAO."""
  profilePicture: String
}

input UpdateUserInput {
  firstname: String
  lastname: String
}

type User {
  address: String!
  categories: [String!]

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  email: String!
  files: [File!]
  firstname: String
  id: ID!
  lastname: String
  role: Role!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}